// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

	static Array memory_loc; 

    /** Initializes the keyboard. */
    function void init() {
		let memory_loc = 24576; 
		return; 
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
		return memory_loc[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() {
	
		var char pressed;
	
		while(Keyboard.keyPressed() = 0)
		{}
		
		let pressed = Keyboard.keyPressed(); 		
		do Output.printChar(pressed);
		
		return pressed; 

    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
	
		char current; 
		String ret_str; 
	
		do Output.printString(message);
		
		let current = Keyboard.readChar();
		let ret_str = String.new(63);
		
		
		while(~(current = String.newLine()))
		{
			if (current = String.backspace())
			{
				ret_str.eraseLastChar(); 
			}
			else
			{
				let ret_str.append(current);
			}
			 
			let current = Keyboard.readChar();
		}
	
		return ret_str; 
    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) {
	
		var String intval; 

		let intval = Keyboard.readLine(message);
		
		return intval.intValue(); 
	}
}
